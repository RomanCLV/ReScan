<UserControl x:Class="ReScanVisualizer.Views.ScatterGraphGroupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ReScanVisualizer.Views"
             xmlns:forms="clr-namespace:ReScanVisualizer.Views.Forms"
             xmlns:validators="clr-namespace:ReScanVisualizer.Validators"
             xmlns:converters="clr-namespace:ReScanVisualizer.Converters"
             xmlns:uc="clr-namespace:ReScanVisualizer.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="250" d:DesignWidth="400"
             >
    <UserControl.Resources>
        <converters:BoolToInverseBoolConverter x:Key="BoolToInverseBoolConverter"/>
        <converters:IsHiddenToImageConverter x:Key="IsHiddenToImageConverter" />
        <converters:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter"/>
        <converters:NullableObjectToStringConverter x:Key="NullableObjectToStringConverter"/>
    </UserControl.Resources>
    <Grid>
        <TabControl Background="Transparent" SelectionChanged="TabControl_SelectionChanged">
            <TabItem Header="General">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Items selected:" Width="85" Style="{StaticResource myTextBlockLeft}" />
                            <TextBlock Text="{Binding Count}" Width="85" Style="{StaticResource myTextBlockLeft}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Scale factor" Width="85" Style="{StaticResource myTextBlockLeft}" />
                            <TextBox   Style="{StaticResource myTextBox}" Width="100">
                                <TextBox.Text>
                                    <Binding Path="ScaleFactor" Converter="{StaticResource NullableObjectToStringConverter}" ConverterParameter="N3">
                                        <Binding.ValidationRules>
                                            <validators:PositiveNumberValidationRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Points radius" Width="85" Style="{StaticResource myTextBlockLeft}" />
                            <TextBox Style="{StaticResource myTextBox}" Width="100">
                                <TextBox.Text>
                                    <Binding Path="PointsRadius" Converter="{StaticResource NullableObjectToStringConverter}" ConverterParameter="N2">
                                        <Binding.ValidationRules>
                                            <validators:PositiveNumberValidationRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Render quality" Width="85" Style="{StaticResource myTextBlockLeft}" />
                            <ComboBox Margin="6" ItemsSource="{Binding RenderQualities}" SelectedValue="{Binding RenderQuality}" MinWidth="100" />
                        </StackPanel>
                        <TextBlock Text="Visibility:" Style="{StaticResource myTextBlockLeft}" />
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource myButtonIconNoPadding}" Click="VisibilityButton_Click" Margin="5">
                                <Button.Content>
                                    <Image Source="{Binding AreHidden, Converter={StaticResource IsHiddenToImageConverter}}" Height="12" Width="19" />
                                </Button.Content>
                            </Button>
                            <TextBlock Text="Visible" Style="{StaticResource myTextBlock}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource myButtonIconNoPadding}" Click="BarycenterVisibilityButton_Click" Margin="5">
                                <Button.Content>
                                    <Image Source="{Binding AreBarycentersHidden, Converter={StaticResource IsHiddenToImageConverter}}" Height="12" Width="19" />
                                </Button.Content>
                            </Button>
                            <TextBlock Text="Barycenter visible" Style="{StaticResource myTextBlock}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource myButtonIconNoPadding}" Click="AveraglePlanVisibilityButton_Click" Margin="5">
                                <Button.Content>
                                    <Image Source="{Binding ArePlansHidden, Converter={StaticResource IsHiddenToImageConverter}}" Height="12" Width="19"/>
                                </Button.Content>
                            </Button>
                            <TextBlock Text="Average plan visible" Style="{StaticResource myTextBlock}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource myButtonIconNoPadding}" Click="Base3DVisibilityButton_Click" Margin="5">
                                <Button.Content>
                                    <Image Source="{Binding AreBasesHidden, Converter={StaticResource IsHiddenToImageConverter}}" Height="12" Width="19"/>
                                </Button.Content>
                            </Button>
                            <TextBlock Text="Base visible" Style="{StaticResource myTextBlock}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource myButtonIconNoPadding}" Click="PointsVisibilityButton_Click" Margin="5">
                                <Button.Content>
                                    <Image Source="{Binding ArePointsHidden, Converter={StaticResource IsHiddenToImageConverter}}" Height="12" Width="19"/>
                                </Button.Content>
                            </Button>
                            <TextBlock Text="Points visible" Style="{StaticResource myTextBlock}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Barycenter">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" >
                            <TextBlock Text="Color" VerticalAlignment="Center" Style="{StaticResource myTextBlockLeft}"/>
                            <!-- Rectangle for Color Display -->
                            <Rectangle 
                            x:Name="BarycenterRectangle"
                            HorizontalAlignment="Center" StrokeThickness="1" Stroke="Black"
                            Margin="10 5"
                            MouseUp="Rectangle_MouseUp"
                            Fill="{Binding BarycentersColorViewModel.Color, Converter={StaticResource ColorToSolidColorBrushConverter}}"
                            Width="16" Height="16"
                            ToolTip="{Binding BarycentersColorViewModel.Color}"
                            ToolTipService.Placement="Top"/>

                            <Popup Placement="Bottom" Closed="ColorPopup_Closed">
                                <uc:ColorSelector 
                                x:Name="BarycenterColorSelector"
                                Loaded="ColorSelector_Loaded"
                                Background="{StaticResource backgroundColor}"
                                BorderBrush="Black"
                                BorderThickness="1"
                                Padding="5"
                                ColorChanged="ColorSelector_ColorChanged" />
                            </Popup>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Radius" Width="85" Style="{StaticResource myTextBlockLeft}" />
                            <TextBox Style="{StaticResource myTextBox}" Width="100">
                                <TextBox.Text>
                                    <Binding Path="BarycenterRadius" Converter="{StaticResource NullableObjectToStringConverter}" ConverterParameter="N2">
                                        <Binding.ValidationRules>
                                            <validators:PositiveNumberValidationRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                        <TextBlock Text="Visibility:" Style="{StaticResource myTextBlockLeft}" />
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource myButtonIconNoPadding}" Click="BarycenterVisibilityButton_Click" Margin="5">
                                <Button.Content>
                                    <Image Source="{Binding AreBarycentersHidden, Converter={StaticResource IsHiddenToImageConverter}}" Height="12" Width="19" />
                                </Button.Content>
                            </Button>
                            <TextBlock Text="Barycenter visible" Style="{StaticResource myTextBlock}" />
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Average plan">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" >
                            <TextBlock Text="Color" VerticalAlignment="Center" Style="{StaticResource myTextBlockLeft}"/>
                            <!-- Rectangle for Color Display -->
                            <Rectangle 
                            x:Name="AveragePlanRectangle"
                            HorizontalAlignment="Center" StrokeThickness="1" Stroke="Black"
                            Margin="10 5"
                            MouseUp="Rectangle_MouseUp"
                            Fill="{Binding PlansColorViewModel.Color, Converter={StaticResource ColorToSolidColorBrushConverter}}"
                            Width="16" Height="16"
                            ToolTip="{Binding PlansColorViewModel.Color}"
                            ToolTipService.Placement="Top"/>

                            <Popup Placement="Bottom" Closed="ColorPopup_Closed">
                                <uc:ColorSelector 
                                x:Name="AveragePlanColorSelector"
                                Loaded="ColorSelector_Loaded"
                                Background="{StaticResource backgroundColor}"
                                BorderBrush="Black"
                                BorderThickness="1"
                                Padding="5"
                                ColorChanged="ColorSelector_ColorChanged" />
                            </Popup>

                        </StackPanel>
                        <TextBlock Text="Visibility:" Style="{StaticResource myTextBlockLeft}" />
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource myButtonIconNoPadding}" Click="AveraglePlanVisibilityButton_Click" Margin="5">
                                <Button.Content>
                                    <Image Source="{Binding ArePlansHidden, Converter={StaticResource IsHiddenToImageConverter}}" Height="12" Width="19"/>
                                </Button.Content>
                            </Button>
                            <TextBlock Text="Average plan visible" Style="{StaticResource myTextBlock}" />
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Base">
                <TabControl Background="Transparent" SelectionChanged="TabControl_SelectionChanged">
                    <TabItem Header="General">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <StackPanel>
                                <TextBlock Text="Visibility:" Style="{StaticResource myTextBlockLeft}" />
                                <StackPanel Orientation="Horizontal">
                                    <Button Style="{StaticResource myButtonIconNoPadding}" Click="Base3DVisibilityButton_Click" Margin="5">
                                        <Button.Content>
                                            <Image Source="{Binding Base3D.IsHidden, Converter={StaticResource IsHiddenToImageConverter}}" Height="12" Width="19"/>
                                        </Button.Content>
                                    </Button>
                                    <TextBlock Text="Base visible" Style="{StaticResource myTextBlock}" />
                                </StackPanel>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="70"/>
                                        <ColumnDefinition Width="140"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Opacity" Style="{StaticResource myTextBlockLeft}" />
                                    <TextBox   Grid.Row="0" Grid.Column="1" Text="{Binding BaseOpacity, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullableObjectToStringConverter}, ConverterParameter=N0}" Style="{StaticResource myTextBox}" />
                                    <Slider    Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Value="{Binding BaseOpacity, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="255" VerticalAlignment="Center" />

                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Axis scale factor" Style="{StaticResource myTextBlock}" />
                                    <TextBox   Grid.Row="1" Grid.Column="1" Style="{StaticResource myTextBox}">
                                        <TextBox.Text>
                                            <Binding Path="AxisScaleFactor" ConverterParameter="N2" Converter="{StaticResource NullableObjectToStringConverter}">
                                                <Binding.ValidationRules>
                                                    <validators:PositiveNumberValidationRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>

                                </Grid>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>

                    <!--<TabItem Header="Translate">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            
                        </ScrollViewer>
                    </TabItem>-->
                    
                    <TabItem Header="Axis rotation" Tag="AxisRotation">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <Grid Margin="0 15 0 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition />
                                    <RowDefinition Height="3*"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Axis" Style="{StaticResource myTextBlockLeft}"/>
                                <ComboBox  Grid.Row="0" Grid.Column="1" Width="100" ItemsSource="{Binding AllRotationAxis}" SelectedValue="{Binding RotationAxis}" HorizontalContentAlignment="Center" HorizontalAlignment="Left" IsEnabled="False"/>

                                <Grid Grid.Row="2" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="75"  />
                                        <ColumnDefinition Width="150"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Angle" Style="{StaticResource myTextBlock}" />

                                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding RotationAngle, StringFormat=N3, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource myTextBox}" />

                                    <Slider Grid.Row="0" Grid.Column="2" Minimum="-180" Maximum="180" Value="{Binding RotationAngle}" VerticalAlignment="Center" />
                                </Grid>

                                <Grid Grid.Column="1" Grid.RowSpan="3" HorizontalAlignment="Right">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Button Grid.Column="0" Grid.Row="0" Content=" -15°" Tag=" -15" Style="{StaticResource myButton}" MinWidth="20" Padding="0" Margin="1" Click="RotateNDegreeButton_Click"/>
                                    <Button Grid.Column="1" Grid.Row="0" Content=" +15°" Tag=" +15" Style="{StaticResource myButton}" MinWidth="20" Padding="0" Margin="1" Click="RotateNDegreeButton_Click"/>
                                    <Button Grid.Column="0" Grid.Row="1" Content=" -30°" Tag=" -30" Style="{StaticResource myButton}" MinWidth="20" Padding="0" Margin="1" Click="RotateNDegreeButton_Click"/>
                                    <Button Grid.Column="1" Grid.Row="1" Content=" +30°" Tag=" +30" Style="{StaticResource myButton}" MinWidth="20" Padding="0" Margin="1" Click="RotateNDegreeButton_Click"/>
                                    <Button Grid.Column="0" Grid.Row="2" Content=" -45°" Tag=" -45" Style="{StaticResource myButton}" MinWidth="20" Padding="0" Margin="1" Click="RotateNDegreeButton_Click"/>
                                    <Button Grid.Column="1" Grid.Row="2" Content=" +45°" Tag=" +45" Style="{StaticResource myButton}" MinWidth="20" Padding="0" Margin="1" Click="RotateNDegreeButton_Click"/>
                                    <Button Grid.Column="0" Grid.Row="3" Content=" -60°" Tag=" -60" Style="{StaticResource myButton}" MinWidth="20" Padding="0" Margin="1" Click="RotateNDegreeButton_Click"/>
                                    <Button Grid.Column="1" Grid.Row="3" Content=" +60°" Tag=" +60" Style="{StaticResource myButton}" MinWidth="20" Padding="0" Margin="1" Click="RotateNDegreeButton_Click"/>
                                    <Button Grid.Column="0" Grid.Row="4" Content=" -90°" Tag=" -90" Style="{StaticResource myButton}" MinWidth="20" Padding="0" Margin="1" Click="RotateNDegreeButton_Click"/>
                                    <Button Grid.Column="1" Grid.Row="4" Content=" +90°" Tag=" +90" Style="{StaticResource myButton}" MinWidth="20" Padding="0" Margin="1" Click="RotateNDegreeButton_Click"/>
                                    <Button Grid.Column="0" Grid.Row="5" Content="-180°" Tag="-180" Style="{StaticResource myButton}" MinWidth="20" Padding="0" Margin="1" Click="RotateNDegreeButton_Click"/>
                                    <Button Grid.Column="1" Grid.Row="5" Content="+180°" Tag="+180" Style="{StaticResource myButton}" MinWidth="20" Padding="0" Margin="1" Click="RotateNDegreeButton_Click"/>
                                </Grid>
                            </Grid>
                        </ScrollViewer>
                    </TabItem>

                    <TabItem Header="Reorient">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <Grid Margin="0 15 0 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>

                                <Button Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" Content="Flip base" Width="75" ToolTip="Flip base" Style="{StaticResource myButton}" Click="FlipButton_Click" />
                            </Grid>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </TabItem>

            <TabItem Header="Points">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Points:" Style="{StaticResource myTextBlockLeft}" />
                            <TextBlock Text="{Binding SamplesCount}" Style="{StaticResource myTextBlockLeft}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" >
                            <TextBlock Text="Color" VerticalAlignment="Center" Style="{StaticResource myTextBlockLeft}"/>
                            <!-- Rectangle for Color Display -->
                            <Rectangle
                            x:Name="PointsRectangle"
                            HorizontalAlignment="Center" StrokeThickness="1" Stroke="Black"
                            Margin="10 5"
                            MouseUp="Rectangle_MouseUp"
                            Fill="{Binding PointsColorViewModel.Color, Converter={StaticResource ColorToSolidColorBrushConverter}}"
                            Width="16" Height="16"
                            ToolTip="{Binding PointsColorViewModel.Color}"
                            ToolTipService.Placement="Bottom"/>

                            <Popup Placement="Bottom" Closed="ColorPopup_Closed">
                                <uc:ColorSelector 
                                x:Name="PointsColorSelector"
                                Loaded="ColorSelector_Loaded"
                                Background="{StaticResource backgroundColor}"
                                BorderBrush="Black"
                                BorderThickness="1"
                                Padding="5"
                                ColorChanged="ColorSelector_ColorChanged" />
                            </Popup>

                        </StackPanel>
                        <TextBlock Text="Visibility:" Style="{StaticResource myTextBlockLeft}" />
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource myButtonIconNoPadding}" Click="PointsVisibilityButton_Click" Margin="5">
                                <Button.Content>
                                    <Image Source="{Binding ArePointsHidden, Converter={StaticResource IsHiddenToImageConverter}}" Height="12" Width="19"/>
                                </Button.Content>
                            </Button>
                            <TextBlock Text="Points visible" Style="{StaticResource myTextBlock}" />
                        </StackPanel>
                        <Button Style="{StaticResource myButton}" ToolTip="Clear" Click="ClearButton_Click" HorizontalAlignment="Left">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource delete}" Width="25" Height="25" />
                                    <TextBlock Text="Clear" VerticalAlignment="Center" Style="{StaticResource myTextBlock}" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>

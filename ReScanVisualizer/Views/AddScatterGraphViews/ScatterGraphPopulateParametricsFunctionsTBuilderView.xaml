<UserControl x:Class="ReScanVisualizer.Views.AddScatterGraphViews.ScatterGraphPopulateParametricsFunctionsTBuilderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ReScanVisualizer.Views.AddScatterGraphViews"
             xmlns:forms="clr-namespace:ReScanVisualizer.Views.Forms"
             xmlns:ctr="clr-namespace:ReScanVisualizer.UserControls"
             xmlns:converters="clr-namespace:ReScanVisualizer.Converters"
             xmlns:dtSelectors="clr-namespace:ReScanVisualizer.DataTemplateSelectors"
             xmlns:models="clr-namespace:ReScanVisualizer.Models"
             xmlns:validators="clr-namespace:ReScanVisualizer.Validators"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Foreground="{StaticResource foregroundColor}"
             DataContextChanged="UserControl_DataContextChanged"
             >
    <UserControl.Resources>
        <converters:RepetitionModeToBooleanConverter x:Key="RepetitionModeToBooleanConverter" />
        <converters:ExpressionToNumberConverter x:Key="ExpressionToNumberConverter" />

        <DataTemplate x:Key="SelectRepetitionModeTemplate">
            <StackPanel Margin="0 10" DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}">

                <RadioButton Content="Translation" 
                     IsChecked="{Binding RepetitionMode, Converter={StaticResource RepetitionModeToBooleanConverter}, ConverterParameter={x:Static models:RepetitionMode.Translation}}" 
                     Foreground="{StaticResource foregroundColor}" />

                <RadioButton Content="Rotation" 
                     IsChecked="{Binding RepetitionMode, Converter={StaticResource RepetitionModeToBooleanConverter}, ConverterParameter={x:Static models:RepetitionMode.Rotation}}" 
                     Foreground="{StaticResource foregroundColor}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="RepetitionNoneTemplate" />

        <DataTemplate x:Key="RepetitionTranslationTemplate">
            <StackPanel DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="35"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="35"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="35"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Direction:" Grid.ColumnSpan="6" />

                    <!-- Translation X -->
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="X" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="1" Grid.Column="1" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="TranslationX" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- Translation Y -->
                    <TextBlock Grid.Row="1" Grid.Column="2" Text="Y" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="1" Grid.Column="3" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="TranslationY" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- Translation Z -->
                    <TextBlock Grid.Row="1" Grid.Column="4" Text="Z" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="1" Grid.Column="5" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="TranslationZ" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Length:" Grid.ColumnSpan="6" />

                    <!-- Translation Length + -->
                    <TextBlock Grid.Row="3" Grid.Column="0" Text="+" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="3" Grid.Column="1" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="PositiveTranslationLength" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- Translation Length - -->
                    <TextBlock Grid.Row="3" Grid.Column="2" Text="-" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="3" Grid.Column="3" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="NegativeTranslationLength" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- Translation Step -->
                    <TextBlock Grid.Row="3" Grid.Column="4" Text="Step" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="3" Grid.Column="5" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="TranslationStep" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="RepetitionRotationTemplate">
            <StackPanel DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Axis rotation:" Grid.ColumnSpan="6" />

                    <!-- Rotation X -->
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="X" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="1" Grid.Column="1" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="RotationX" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- Rotation Y -->
                    <TextBlock Grid.Row="1" Grid.Column="2" Text="Y" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="1" Grid.Column="3" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="RotationY" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- Rotation Z -->
                    <TextBlock Grid.Row="1" Grid.Column="4" Text="Z" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="1" Grid.Column="5" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="RotationZ" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Point where the axis passes:" Grid.ColumnSpan="6" />

                    <!-- Rotation Point X -->
                    <TextBlock Grid.Row="3" Grid.Column="0" Text="X" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="3" Grid.Column="1" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="RotationPointX" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- Rotation Point Y -->
                    <TextBlock Grid.Row="3" Grid.Column="2" Text="Y" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="3" Grid.Column="3" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="RotationPointY" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- Rotation Point Z -->
                    <TextBlock Grid.Row="3" Grid.Column="4" Text="Z" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="3" Grid.Column="5" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="RotationPointZ" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBlock Grid.Row="4" Grid.Column="0" Text="Length:" Grid.ColumnSpan="6" />

                    <!-- Rotation Length + -->
                    <TextBlock Grid.Row="5" Grid.Column="0" Text="[0;180]°" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="5" Grid.Column="1" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="PositiveRotationLength" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- Rotation Length - -->
                    <TextBlock Grid.Row="5" Grid.Column="2" Text="[-180;0]°" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="5" Grid.Column="3" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="NegativeRotationLength" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- Rotation Step -->
                    <TextBlock Grid.Row="5" Grid.Column="4" Text="Step" Style="{StaticResource myTextBlock}" />
                    <TextBox   Grid.Row="5" Grid.Column="5" Style="{StaticResource myTextBox}">
                        <TextBox.Text>
                            <Binding Path="RotationStep" StringFormat="N3" Converter="{StaticResource ExpressionToNumberConverter}">
                                <Binding.ValidationRules>
                                    <validators:ExpressionValidator />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </StackPanel>
        </DataTemplate>

        <dtSelectors:RepetitionModeTemplateSelector 
            x:Key="RepetitionModeTemplateSelector"
            NoneTemplate="{StaticResource RepetitionNoneTemplate}"
            TranslationTemplate="{StaticResource RepetitionTranslationTemplate}"
            RotationTemplate="{StaticResource RepetitionRotationTemplate}" />

    </UserControl.Resources>

    <DockPanel Margin="10">
        <StackPanel DockPanel.Dock="Right" Margin="8">
            <CheckBox IsChecked="{Binding AutoUpdateBuilderModel}" Content="Auto update" Foreground="{StaticResource foregroundColor}" ToolTip="Recommend to disable this option if the points count is greater than 1000."/>
            <local:ScatterGraphBuilderVisualizerView DataContext="{Binding ScatterGraphBuilderVisualizerViewModel}" Height="500" Width="500" HorizontalAlignment="Right" />
        </StackPanel>
        <StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0 10">
                <TextBlock Text="Num points:" Width="110" Margin="10" Style="{StaticResource myTextBlockLeft}" />
                <TextBox Text="{Binding NumPoints, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Width="100" Style="{StaticResource myTextBox}" IsEnabled="False"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="10">
                <CheckBox IsChecked="{Binding AngleAreInDegrees}" Content="Angle are in degrees" Foreground="{StaticResource foregroundColor}"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0 10">
                <TextBlock Text="Expression: x(t) = " Width="110" Margin="10" Style="{StaticResource myTextBlockLeft}"/>
                <TextBox Text="{Binding ExpressionStringX, UpdateSourceTrigger=LostFocus}" Width="300" Style="{StaticResource myTextBox}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0 10">
                <TextBlock Text="Expression: y(t) = " Width="110" Margin="10" Style="{StaticResource myTextBlockLeft}"/>
                <TextBox Text="{Binding ExpressionStringY, UpdateSourceTrigger=LostFocus}" Width="300" Style="{StaticResource myTextBox}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0 10">
                <TextBlock Text="Expression: z(t) = " Width="110" Margin="10" Style="{StaticResource myTextBlockLeft}"/>
                <TextBox Text="{Binding ExpressionStringZ, UpdateSourceTrigger=LostFocus}" Width="300" Style="{StaticResource myTextBox}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0 10">
                <TextBlock Text="{Binding ExpressionErrorMessage}" Foreground="{StaticResource errorColor}" Style="{StaticResource myTextBlockLeft}" />
            </StackPanel>

            <GroupBox Header="Variables range" Margin="0 10">
                <StackPanel>
                    <forms:ExpressionVariableRangeForm DataContext="{Binding TVariableRange}" HorizontalAlignment="Left" />
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Repetition" Margin="0 10">
                <StackPanel Margin="10">
                    <CheckBox IsChecked="{Binding IsRepeated}" Content="Repeat the pattern" Foreground="{StaticResource foregroundColor}" />

                    <ContentControl Content="{Binding IsRepeated}">
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRepeated}" Value="True">
                                        <Setter Property="ContentTemplate" Value="{StaticResource SelectRepetitionModeTemplate}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <ContentControl Content="{Binding RepetitionMode}" ContentTemplateSelector="{StaticResource RepetitionModeTemplateSelector}" />
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Color" Margin="0 10">
                <ctr:ColorSelector x:Name="ColorSelector" ColorChanged="ColorSelector_ColorChanged" Margin="30" />
            </GroupBox>
        </StackPanel>
    </DockPanel>
</UserControl>

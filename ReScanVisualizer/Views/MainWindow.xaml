<Window x:Class="ReScanVisualizer.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ReScanVisualizer.Views"
        xmlns:itw="clr-namespace:ReScanVisualizer.Views.ItemTreeViews"
        xmlns:viewModels="clr-namespace:ReScanVisualizer.ViewModels"
        xmlns:viewModelsSamples="clr-namespace:ReScanVisualizer.ViewModels.Samples"
        xmlns:partsViewModels="clr-namespace:ReScanVisualizer.ViewModels.Parts"
        xmlns:converters="clr-namespace:ReScanVisualizer.Converters"
        xmlns:HelixToolkit="clr-namespace:HelixToolkit.Wpf;assembly=HelixToolkit.Wpf"
        mc:Ignorable="d"
        Title="ReScan Visualizer" 
        Height="720" Width="1280"
        MinHeight="720" MinWidth="1280"
        WindowState="Maximized"
        Background="{StaticResource backgroundColor}"
        Closing="Window_Closing"
        Loaded="Window_Loaded"
        >
    <Window.Resources>
        <converters:CommandKeyToInputGestureTextConverter x:Key="CommandKeyToInputGestureTextConverter" />
        <converters:IsHiddenToOpacityConverter x:Key="IsHiddenToOpacityConverter" />
        <converters:BoolToFontWeightConverter x:Key="BoolToFontWeightConverter" />
        <converters:BoolToFontStyleConverter x:Key="BoolToFontStyleConverter" />
        <converters:EnumEqualityToBoolConverter x:Key="EnumEqualityToBoolConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding x:Name="AddScatterGraphCommandKey" 
                    Command="{Binding Path=AddScatterGraphCommand.Command}"  
                    Key="{Binding Path=AddScatterGraphCommand.Key}" 
                    Modifiers="{Binding Path=AddScatterGraphCommand.Modifiers}"
                    />

        <KeyBinding x:Name="AddPartCommandKey"
                    Command="{Binding Path=AddPartCommand.Command}"
                    Key="{Binding Path=AddPartCommand.Key}"
                    Modifiers="{Binding Path=AddPartCommand.Modifiers}"
                    />

        <KeyBinding x:Name="AddBaseCommandKey" 
                    Command="{Binding Path=AddBaseCommand.Command}"  
                    Key="{Binding Path=AddBaseCommand.Key}" 
                    Modifiers="{Binding Path=AddBaseCommand.Modifiers}"
                    />

        <KeyBinding x:Name="ImportBaseCommandKey" 
            Command="{Binding Path=ImportBaseCommand.Command}"  
            Key="{Binding Path=ImportBaseCommand.Key}" 
            Modifiers="{Binding Path=ImportBaseCommand.Modifiers}"
            />

        <KeyBinding x:Name="ExportBaseCommandKey" 
            Command="{Binding Path=ExportBaseCommand.Command}"  
            Key="{Binding Path=ExportBaseCommand.Key}" 
            Modifiers="{Binding Path=ExportBaseCommand.Modifiers}"
            />

    </Window.InputBindings>

    <DockPanel>
        <StackPanel
            DockPanel.Dock="Top"
            Background="{StaticResource backgroundColor}"
            >
            <Menu DockPanel.Dock="Top" Background="Transparent">
                <MenuItem Header="_Edit" ToolTip="Edit" Style="{StaticResource menuItemTitle}">
                    <MenuItem Header="_Add a graph" ToolTip="{Binding AddScatterGraphCommand.Description}" Style="{StaticResource menuItemItem}"
                              Command="{Binding ElementName=AddScatterGraphCommandKey, Path=Command}"
                              InputGestureText="{Binding ElementName=AddScatterGraphCommandKey, Converter={StaticResource CommandKeyToInputGestureTextConverter}}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource add}" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="_Add a part" ToolTip="{Binding AddPartCommand.Description}" Style="{StaticResource menuItemItem}"
                              Command="{Binding ElementName=AddPartCommandKey, Path=Command}"
                              InputGestureText="{Binding ElementName=AddPartCommandKey, Converter={StaticResource CommandKeyToInputGestureTextConverter}}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource add}" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="_Add a base" ToolTip="{Binding AddBaseCommand.Description}" Style="{StaticResource menuItemItem}"
                              Command="{Binding ElementName=AddBaseCommandKey, Path=Command}"
                              InputGestureText="{Binding ElementName=AddBaseCommandKey, Converter={StaticResource CommandKeyToInputGestureTextConverter}}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource add}" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <Separator />

                    <MenuItem Header="_Import bases" ToolTip="{Binding ImportBaseCommand.Description}" Style="{StaticResource menuItemItem}"
                            Command="{Binding ElementName=ImportBaseCommandKey, Path=Command}"
                            InputGestureText="{Binding ElementName=ImportBaseCommandKey, Converter={StaticResource CommandKeyToInputGestureTextConverter}}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource update}" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <Separator />

                    <MenuItem Header="_Export bases" ToolTip="{Binding ExportBaseCommand.Description}" Style="{StaticResource menuItemItem}"
                              Command="{Binding ElementName=ExportBaseCommandKey, Path=Command}"
                              InputGestureText="{Binding ElementName=ExportBaseCommandKey, Converter={StaticResource CommandKeyToInputGestureTextConverter}}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource update}" />
                        </MenuItem.Icon>
                    </MenuItem>

                </MenuItem>

                <MenuItem Header="_Global parameters" ToolTip="Global parameters" Style="{StaticResource menuItemTitle}">

                    <MenuItem Header="General render quality" Style="{StaticResource menuItemItem}">
                        <MenuItem Header="Very low"  Click="VeryLowRenderQualityMenuItem_Click"/>
                        <MenuItem Header="Low"       Click="LowRenderQualityMenuItem_Click"/>
                        <MenuItem Header="Medium"    Click="MediumRenderQualityMenuItem_Click"/>
                        <MenuItem Header="High"      Click="HighRenderQualityMenuItem_Click"/>
                        <MenuItem Header="Very high" Click="VeryHighRenderQualityMenuItem_Click"/>
                    </MenuItem>

                    <Separator />

                    <MenuItem Header="Randomize all colors" Style="{StaticResource menuItemItem}" Click="RandomizeColorMenuItem_Click" />

                    <Separator />

                    <MenuItem Header="Scatter graphs visibility" Style="{StaticResource menuItemItem}">
                        <MenuItem Header="Show all graphs" Click="ShowAllGraphsMenuItem_Click"/>
                        <MenuItem Header="Hide all graphs" Click="HideAllGraphsMenuItem_Click"/>
                    </MenuItem>

                    <MenuItem Header="Points' scatter graphs visibility" Style="{StaticResource menuItemItem}">
                        <MenuItem Header="Show all points' graphs" Click="ShowAllPointsGraphsMenuItem_Click"/>
                        <MenuItem Header="Hide all points' graphs" Click="HideAllPointsGraphsMenuItem_Click"/>
                    </MenuItem>

                    <MenuItem Header="Average plans visibility" Style="{StaticResource menuItemItem}">
                        <MenuItem Header="Show all average plan" Click="ShowAllAveragePlansMenuItem_Click"/>
                        <MenuItem Header="Hide all average plan" Click="HideAllAveragePlansMenuItem_Click"/>
                    </MenuItem>

                    <MenuItem Header="Barycenters graphs visibility" Style="{StaticResource menuItemItem}">
                        <MenuItem Header="Show all barycenters" Click="ShowAllBarycentersMenuItem_Click"/>
                        <MenuItem Header="Hide all barycenters" Click="HideAllBarycentersMenuItem_Click"/>
                    </MenuItem>

                    <MenuItem Header="Bases' graphs visibility" Style="{StaticResource menuItemItem}">
                        <MenuItem Header="Show all bases' graphs" Click="ShowAllBasesGraphsMenuItem_Click"/>
                        <MenuItem Header="Hide all bases' graphs" Click="HideAllBasesGraphsMenuItem_Click"/>
                    </MenuItem>

                    <MenuItem Header="Added bases visibility" Style="{StaticResource menuItemItem}">
                        <MenuItem Header="Show all added bases" Click="ShowAllAddedBasesMenuItem_Click"/>
                        <MenuItem Header="Hide all added bases" Click="HideAllAddedBasesMenuItem_Click"/>
                    </MenuItem>
                </MenuItem>

                <MenuItem Header="_Viewport" ToolTip="Viewport" Style="{StaticResource menuItemTitle}">
                    <MenuItem Header="Show camera info"         IsCheckable="True" IsChecked="{Binding ElementName=_viewPort, Path=ShowCameraInfo}"        Style="{StaticResource menuItemItem}" />
                    <MenuItem Header="Show camera target"       IsCheckable="True" IsChecked="{Binding ElementName=_viewPort, Path=ShowCameraTarget}"      Style="{StaticResource menuItemItem}" />
                    <MenuItem Header="Show coordinate system"   IsCheckable="True" IsChecked="{Binding ElementName=_viewPort, Path=ShowCoordinateSystem}"  Style="{StaticResource menuItemItem}" />
                    <MenuItem Header="Show field of view"       IsCheckable="True" IsChecked="{Binding ElementName=_viewPort, Path=ShowFieldOfView}"       Style="{StaticResource menuItemItem}" />
                    <MenuItem Header="Show frame rate"          IsCheckable="True" IsChecked="{Binding ElementName=_viewPort, Path=ShowFrameRate}"         Style="{StaticResource menuItemItem}" />
                    <MenuItem Header="Show triangle count info" IsCheckable="True" IsChecked="{Binding ElementName=_viewPort, Path=ShowTriangleCountInfo}" Style="{StaticResource menuItemItem}" />
                    <MenuItem Header="Show view cube"           IsCheckable="True" IsChecked="{Binding ElementName=_viewPort, Path=ShowViewCube}"          Style="{StaticResource menuItemItem}" />
                    <Separator />
                    <MenuItem Header="Coordinate system position" Style="{StaticResource menuItemItem}">
                        <MenuItem Header="Horizontal alignment">
                            <MenuItem Header="Left" 
                                      IsChecked="{Binding ElementName=_viewPort, Path=CoordinateSystemHorizontalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static HorizontalAlignment.Left}}" 
                                      Click="CoordinateSystemHorizontalPositionMenuItem_Click" 
                                      Tag="{x:Static HorizontalAlignment.Left}" />
                            <MenuItem Header="Center" 
                                      IsChecked="{Binding ElementName=_viewPort, Path=CoordinateSystemHorizontalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static HorizontalAlignment.Center}}" 
                                      Click="CoordinateSystemHorizontalPositionMenuItem_Click" 
                                      Tag="{x:Static HorizontalAlignment.Center}" />
                            <MenuItem Header="Right" 
                                      IsChecked="{Binding ElementName=_viewPort, Path=CoordinateSystemHorizontalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static HorizontalAlignment.Right}}" 
                                      Click="CoordinateSystemHorizontalPositionMenuItem_Click" 
                                      Tag="{x:Static HorizontalAlignment.Right}" />
                            <MenuItem Header="Stretch" 
                                      IsChecked="{Binding ElementName=_viewPort, Path=CoordinateSystemHorizontalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static HorizontalAlignment.Stretch}}" 
                                      Click="CoordinateSystemHorizontalPositionMenuItem_Click" 
                                      Tag="{x:Static HorizontalAlignment.Stretch}" />
                        </MenuItem>
                        <MenuItem Header="Vertical alignment">
                            <MenuItem Header="Top" 
                                      IsChecked="{Binding ElementName=_viewPort, Path=CoordinateSystemVerticalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static VerticalAlignment.Top}}" 
                                      Click="CoordinateSystemVerticalPositionMenuItem_Click" 
                                      Tag="{x:Static VerticalAlignment.Top}" />
                            <MenuItem Header="Center" 
                                      IsChecked="{Binding ElementName=_viewPort, Path=CoordinateSystemVerticalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static VerticalAlignment.Center}}" 
                                      Click="CoordinateSystemVerticalPositionMenuItem_Click" 
                                      Tag="{x:Static VerticalAlignment.Center}" />
                            <MenuItem Header="Bottom" 
                                      IsChecked="{Binding ElementName=_viewPort, Path=CoordinateSystemVerticalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static VerticalAlignment.Bottom}}" 
                                      Click="CoordinateSystemVerticalPositionMenuItem_Click" 
                                      Tag="{x:Static VerticalAlignment.Bottom}" />
                            <MenuItem Header="Stretch" 
                                      IsChecked="{Binding ElementName=_viewPort, Path=CoordinateSystemVerticalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static VerticalAlignment.Stretch}}" 
                                      Click="CoordinateSystemVerticalPositionMenuItem_Click" 
                                      Tag="{x:Static VerticalAlignment.Stretch}" />
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="Cube position" Style="{StaticResource menuItemItem}">
                        <MenuItem Header="Horizontal alignment">
                            <MenuItem Header="Left" 
                                          IsChecked="{Binding ElementName=_viewPort, Path=ViewCubeHorizontalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static HorizontalAlignment.Left}}" 
                                          Click="CubeHorizontalPositionMenuItem_Click" 
                                          Tag="{x:Static HorizontalAlignment.Left}" />
                            <MenuItem Header="Center" 
                                          IsChecked="{Binding ElementName=_viewPort, Path=ViewCubeHorizontalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static HorizontalAlignment.Center}}" 
                                          Click="CubeHorizontalPositionMenuItem_Click" 
                                          Tag="{x:Static HorizontalAlignment.Center}" />
                            <MenuItem Header="Right" 
                                          IsChecked="{Binding ElementName=_viewPort, Path=ViewCubeHorizontalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static HorizontalAlignment.Right}}" 
                                          Click="CubeHorizontalPositionMenuItem_Click" 
                                          Tag="{x:Static HorizontalAlignment.Right}" />
                            <MenuItem Header="Stretch" 
                                          IsChecked="{Binding ElementName=_viewPort, Path=ViewCubeHorizontalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static HorizontalAlignment.Stretch}}" 
                                          Click="CubeHorizontalPositionMenuItem_Click" 
                                          Tag="{x:Static HorizontalAlignment.Stretch}" />
                        </MenuItem>
                        <MenuItem Header="Vertical alignment">
                            <MenuItem Header="Top" 
                                          IsChecked="{Binding ElementName=_viewPort, Path=ViewCubeVerticalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static VerticalAlignment.Top}}" 
                                          Click="CubeVerticalPositionMenuItem_Click" 
                                          Tag="{x:Static VerticalAlignment.Top}" />
                            <MenuItem Header="Center" 
                                          IsChecked="{Binding ElementName=_viewPort, Path=ViewCubeVerticalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static VerticalAlignment.Center}}" 
                                          Click="CubeVerticalPositionMenuItem_Click" 
                                          Tag="{x:Static VerticalAlignment.Center}" />
                            <MenuItem Header="Bottom" 
                                          IsChecked="{Binding ElementName=_viewPort, Path=ViewCubeVerticalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static VerticalAlignment.Bottom}}" 
                                          Click="CubeVerticalPositionMenuItem_Click" 
                                          Tag="{x:Static VerticalAlignment.Bottom}" />
                            <MenuItem Header="Stretch" 
                                          IsChecked="{Binding ElementName=_viewPort, Path=ViewCubeVerticalPosition, Converter={StaticResource EnumEqualityToBoolConverter}, ConverterParameter={x:Static VerticalAlignment.Stretch}}" 
                                          Click="CubeVerticalPositionMenuItem_Click" 
                                          Tag="{x:Static VerticalAlignment.Stretch}" />
                        </MenuItem>
                    </MenuItem>

                    <Separator />
                    <MenuItem Header="Camera" Style="{StaticResource menuItemItem}">
                        <MenuItem Header="Home position" Click="CameraHomePositionMenuItem_Click" />
                    </MenuItem>

                </MenuItem>

                <MenuItem Header="_Pipes" ToolTip="Global parameters" Style="{StaticResource menuItemTitle}">
                    <MenuItem Header="Command line" Style="{StaticResource menuItemItem}" Click="CommandLineMenuItem_Click" />
                    <MenuItem Header="UDP" Style="{StaticResource menuItemItem}">
                        <MenuItem Header="Opened UDP pipes" ItemsSource="{Binding UDPPipes}" DisplayMemberPath="Port">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="ToolTip" Value="Click to close" />
                                    <EventSetter Event="Click" Handler="UDPMenuItem_Click"/>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="New" Click="NewUDPMenuItem_Click"/>
                    </MenuItem>


                </MenuItem>
            </Menu>
        </StackPanel>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="50" Width="400"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="firstRow" Height="*" MinHeight="250"/>
                    <!--<RowDefinition Height="250" MinHeight="250" />-->
                    <RowDefinition Height="Auto" MinHeight="250"/>
                </Grid.RowDefinitions>

                <TabControl Grid.Row="0" Background="Transparent" Margin="0 0 5 5" >
                    <!-- KeyUp="TabControl_KeyUp" -->
                    <TabItem Header="Scatter graphs">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <DockPanel Grid.Row="0">
                                <Button Style="{StaticResource myButtonIcon}" DockPanel.Dock="Right" ToolTip="Clear graphs" Click="GraphClearButton_Click">
                                    <Button.Content>
                                        <Image Source="{StaticResource delete}" />
                                    </Button.Content>
                                </Button>
                                <Button Style="{StaticResource myButtonIcon}" DockPanel.Dock="Right" ToolTip="Add graph" Click="ScatterGraphsAddButton_Click">
                                    <Button.Content>
                                        <Image Source="{StaticResource add}" />
                                    </Button.Content>
                                </Button>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Scatter Graphs (" Style="{StaticResource mainViewSectionTitle}" Margin="5 5 0 5" />
                                    <TextBlock Text="{Binding ScatterGraphs.Count}" Style="{StaticResource mainViewSectionTitle}" Margin="0" />
                                    <TextBlock Text=")" Style="{StaticResource mainViewSectionTitle}" Margin="0 5 5 5" />
                                </StackPanel>
                            </DockPanel>
                            <ScrollViewer
                                Grid.Row="1"
                                HorizontalScrollBarVisibility="Auto" 
                                VerticalScrollBarVisibility="Auto"
                                FocusVisualStyle="{x:Null}">
                                <TreeView 
                                    Background="Transparent" 
                                    BorderThickness="0" 
                                    ItemsSource="{Binding ScatterGraphs, UpdateSourceTrigger=PropertyChanged}"
                                    x:Name="GraphsTreeView">
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <EventSetter Event="KeyUp" Handler="ScatterGraphTreeViewItem_KeyUp"/>
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                    <TreeView.ItemTemplate>
                                        <DataTemplate>
                                            <TreeViewItem IsExpanded="True" Margin="-20 0 0 10"
                                                    FontStyle="{Binding IsMouseOver, Converter={StaticResource BoolToFontStyleConverter}}">
                                                <TreeViewItem.Header>
                                                    <itw:ScatterGraphTreeViewItemHeader 
                                                        FontWeight="{Binding IsSelected, Converter={StaticResource BoolToFontWeightConverter}}"
                                                        MouseDown="ScatterGraphTreeViewItemHeader_MouseDown" />
                                                </TreeViewItem.Header>
                                                <TreeViewItem>
                                                    <TreeViewItem.Header>
                                                        <itw:BarycenterTreeViewItemHeader 
                                                            DataContext="{Binding Barycenter, UpdateSourceTrigger=PropertyChanged}" 
                                                            FontWeight="{Binding IsSelected, Converter={StaticResource BoolToFontWeightConverter}}"
                                                            MouseDown="BarycenterTreeViewItemHeader_MouseDown" />
                                                    </TreeViewItem.Header>
                                                </TreeViewItem>
                                                <TreeViewItem>
                                                    <TreeViewItem.Header>
                                                        <itw:AveragePlanTreeViewItemHeader
                                                            DataContext="{Binding AveragePlan, UpdateSourceTrigger=PropertyChanged}"
                                                            FontWeight="{Binding IsSelected, Converter={StaticResource BoolToFontWeightConverter}}"
                                                            MouseDown="AveragePlanTreeViewItemHeader_MouseDown"/>
                                                    </TreeViewItem.Header>
                                                </TreeViewItem>
                                                <itw:BaseTreeViewItem 
                                                    DataContext="{Binding Base3D}" 
                                                    PreviewMouseDown="BaseTreeViewItem_PreviewMouseDown"/>
                                                <TreeViewItem ItemsSource="{Binding Samples, UpdateSourceTrigger=PropertyChanged}">
                                                    <TreeViewItem.Header>
                                                        <itw:SamplesTreeViewItemHeader
                                                            MouseDown="SamplesTreeViewItemHeader_MouseDown"/>
                                                    </TreeViewItem.Header>
                                                    <TreeViewItem.ItemTemplate>
                                                        <DataTemplate>
                                                            <itw:SampleTreeViewItemHeader
                                                                FontWeight="{Binding IsSelected, Converter={StaticResource BoolToFontWeightConverter}}"
                                                                MouseDown="SampleTreeViewItemHeader_MouseDown"/>
                                                        </DataTemplate>
                                                    </TreeViewItem.ItemTemplate>
                                                </TreeViewItem>
                                            </TreeViewItem>
                                        </DataTemplate>
                                    </TreeView.ItemTemplate>
                                </TreeView>
                            </ScrollViewer>
                        </Grid>
                    </TabItem>

                    <TabItem Header="Parts">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <DockPanel Grid.Row="0">
                                <!-- Visibility="{Binding ElementName=GraphsTreeView, Path=HasItems, Converter={StaticResource BooleanToVisibilityConverter}}" -->
                                <Button Style="{StaticResource myButtonIcon}" DockPanel.Dock="Right" ToolTip="Clear parts" Click="PartsClearButton_Click">
                                    <Button.Content>
                                        <Image Source="{StaticResource delete}" />
                                    </Button.Content>
                                </Button>
                                <Button Style="{StaticResource myButtonIcon}" DockPanel.Dock="Right" ToolTip="Add part" Click="PartsAddButton_Click">
                                    <Button.Content>
                                        <Image Source="{StaticResource add}" />
                                    </Button.Content>
                                </Button>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Parts (" Style="{StaticResource mainViewSectionTitle}" Margin="5 5 0 5" />
                                    <TextBlock Text="{Binding Parts.Count}" Style="{StaticResource mainViewSectionTitle}" Margin="0" />
                                    <TextBlock Text=")" Style="{StaticResource mainViewSectionTitle}" Margin="0 5 5 5" />
                                </StackPanel>
                            </DockPanel>
                            <ScrollViewer
                                Grid.Row="1"
                                HorizontalScrollBarVisibility="Auto" 
                                VerticalScrollBarVisibility="Auto"
                                FocusVisualStyle="{x:Null}">
                                <TreeView
                                    Background="Transparent" 
                                    BorderThickness="0" 
                                    ItemsSource="{Binding Parts, UpdateSourceTrigger=PropertyChanged}"
                                    x:Name="PartsTreeView"
                                    >
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <EventSetter Event="KeyUp" Handler="PartTreeViewHeader_KeyUp" />
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                    <TreeView.ItemTemplate>
                                        <DataTemplate>
                                            <TreeViewItem Margin="-20 0 0 10" IsExpanded="True">
                                                <TreeViewItem.Header>
                                                    <itw:PartTreeViewHeader
                                                        FontWeight="{Binding IsSelected, Converter={StaticResource BoolToFontWeightConverter}}"
                                                        MouseDown="PartTreeViewItem_MouseDown" />
                                                </TreeViewItem.Header>

                                                <TreeViewItem>
                                                    <TreeViewItem.Header>
                                                        <itw:BarycenterTreeViewItemHeader 
                                                            DataContext="{Binding Barycenter, UpdateSourceTrigger=PropertyChanged}" 
                                                            FontWeight="{Binding IsSelected, Converter={StaticResource BoolToFontWeightConverter}}"
                                                            MouseDown="BarycenterTreeViewItemHeader_MouseDown" />
                                                    </TreeViewItem.Header>
                                                </TreeViewItem>

                                                <TreeViewItem
                                                    IsExpanded="False"
                                                    ItemsSource="{Binding Bases}">
                                                    <TreeViewItem.Header>
                                                        <itw:PartBasesTreeViewItemHeader />
                                                    </TreeViewItem.Header>
                                                    <TreeViewItem.ItemTemplate>
                                                        <DataTemplate>
                                                            <itw:BaseTreeViewItem MouseUp="BaseTreeViewItem_MouseDown"/>
                                                        </DataTemplate>
                                                    </TreeViewItem.ItemTemplate>
                                                </TreeViewItem>

                                                <TreeViewItem 
                                                        IsExpanded="False"
                                                        FontStyle="{Binding IsMouseOver, Converter={StaticResource BoolToFontStyleConverter}}"
                                                        ItemsSource="{Binding ScatterGraphs}">
                                                    <TreeViewItem.Header>
                                                        <itw:PartScatterGraphesTreeViewItemHeader />
                                                    </TreeViewItem.Header>
                                                    <TreeViewItem.ItemContainerStyle>
                                                        <Style TargetType="{x:Type TreeViewItem}">
                                                            <EventSetter Event="KeyUp" Handler="PartTreeViewItem_KeyUp"/>
                                                        </Style>
                                                    </TreeViewItem.ItemContainerStyle>
                                                    <TreeViewItem.ItemTemplate>
                                                        <DataTemplate>
                                                            <itw:PartScatterGraphTreeViewItem 
                                                                MouseDown="PartScatterGraphTreeViewItemHeader_MouseDown"/>
                                                        </DataTemplate>
                                                    </TreeViewItem.ItemTemplate>
                                                </TreeViewItem>
                                            </TreeViewItem>
                                        </DataTemplate>
                                    </TreeView.ItemTemplate>
                                </TreeView>
                            </ScrollViewer>
                        </Grid>
                    </TabItem>

                    <TabItem Header="Bases">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <DockPanel Grid.Row="0">
                                <Button Style="{StaticResource myButtonIcon}" DockPanel.Dock="Right" ToolTip="Clear bases" Click="BaseClearButton_Click">
                                    <Button.Content>
                                        <Image Source="{StaticResource delete}" />
                                    </Button.Content>
                                </Button>
                                <Button Style="{StaticResource myButtonIcon}" DockPanel.Dock="Right" ToolTip="Add base" Click="BasesAddButton_Click">
                                    <Button.Content>
                                        <Image Source="{StaticResource add}" />
                                    </Button.Content>
                                </Button>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Bases (" Style="{StaticResource mainViewSectionTitle}"  Margin="5 5 0 5"/>
                                    <TextBlock Text="{Binding Bases.Count}" Style="{StaticResource mainViewSectionTitle}" Margin="0" />
                                    <TextBlock Text=")" Style="{StaticResource mainViewSectionTitle}" Margin="0 5 5 5" />
                                </StackPanel>
                            </DockPanel>
                            <ScrollViewer
                                Grid.Row="1"
                                HorizontalScrollBarVisibility="Auto" 
                                VerticalScrollBarVisibility="Auto"
                                FocusVisualStyle="{x:Null}">
                                <TreeView 
                                    Background="Transparent" 
                                    BorderThickness="0" 
                                    ItemsSource="{Binding Bases, UpdateSourceTrigger=PropertyChanged}"
                                    x:Name="BasesTreeView">
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <Style.Setters>
                                                <EventSetter Event="KeyUp" Handler="BaseTreeViewItem_KeyUp"/>
                                            </Style.Setters>
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                    <TreeView.ItemTemplate>
                                        <DataTemplate>
                                            <itw:BaseTreeViewItem MouseUp="BaseTreeViewItem_MouseDown"/>
                                        </DataTemplate>
                                    </TreeView.ItemTemplate>
                                </TreeView>
                            </ScrollViewer>
                        </Grid>
                    </TabItem>
                </TabControl>

                <GridSplitter Grid.Row="0" Height="5" ResizeDirection="Rows" Background="{StaticResource backgroundListColor}"
                              HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0 0 5 0" />

                <Grid Grid.Row="1" x:Name="contentContainer" Margin="0 0 5 0">
                    <Grid.Resources>
                        <DataTemplate DataType="{x:Type viewModels:ScatterGraphViewModel}">
                            <local:ScatterGraphView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModelsSamples:SampleViewModel}">
                            <local:SampleView />
                            <!-- IsEnabled="{Binding CanEdit}" -->
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:PlanViewModel}">
                            <local:PlanView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:BaseViewModel}">
                            <local:BaseView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:ScatterGraphGroupViewModel}">
                            <local:ScatterGraphGroupView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type partsViewModels:PartViewModelBase}">
                            <local:PartView />
                        </DataTemplate>
                    </Grid.Resources>
                    <ContentControl Content="{Binding SelectedViewModel}" Height="{Binding ElementName=contentContainer, Path=ActualHeight}"/>
                </Grid>
            </Grid>

            <GridSplitter Grid.Column="0" Width="5" Background="{StaticResource backgroundListColor}" />

            <HelixToolkit:HelixViewport3D 
                x:Name="_viewPort" Grid.Column="1"
                CoordinateSystemVerticalPosition="Top"
                MouseMove="HelixViewport3D_MouseMove" 
                MouseDown="HelixViewport3D_MouseDown" 
                MouseLeave="ViewPort_MouseLeave"
                KeyUp="HelixViewport3D_KeyUp">
                <HelixToolkit:HelixViewport3D.Background>
                    <LinearGradientBrush StartPoint="0.5 0" EndPoint="0.5 1">
                        <GradientStop Color="#FF0061FF" Offset="0"/>
                        <GradientStop Color="DarkBlue"  Offset="1"/>
                    </LinearGradientBrush>
                </HelixToolkit:HelixViewport3D.Background>
                <!-- Remember to add light to the scene -->
                <HelixToolkit:SunLight/>
                <HelixToolkit:GridLinesVisual3D Width="30" Length="30" MinorDistance="1" MajorDistance="1" Thickness="0.01"/>

                <HelixToolkit:LinesVisual3D Thickness="2.5" Color="Red">
                    <HelixToolkit:LinesVisual3D.Points>
                        <Point3D X="0" Y="0" Z="0"/>
                        <Point3D X="15" Y="0" Z="0"/>
                    </HelixToolkit:LinesVisual3D.Points>
                </HelixToolkit:LinesVisual3D>
                <HelixToolkit:LinesVisual3D Thickness="2.5" Color="Green">
                    <HelixToolkit:LinesVisual3D.Points>
                        <Point3D X="0" Y="0" Z="0"/>
                        <Point3D X="0" Y="15" Z="0"/>
                    </HelixToolkit:LinesVisual3D.Points>
                </HelixToolkit:LinesVisual3D>
                <HelixToolkit:LinesVisual3D Thickness="2.5" Color="Blue">
                    <HelixToolkit:LinesVisual3D.Points>
                        <Point3D X="0" Y="0" Z="0"/>
                        <Point3D X="0" Y="0" Z="15"/>
                    </HelixToolkit:LinesVisual3D.Points>
                </HelixToolkit:LinesVisual3D>

                <ModelVisual3D Content="{Binding BasesModels}"/>
                <ModelVisual3D Content="{Binding PartsModels}"/>
                <ModelVisual3D Content="{Binding Models}"/>
            </HelixToolkit:HelixViewport3D>
        </Grid>
    </DockPanel>
</Window>
